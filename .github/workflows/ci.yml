name: CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    test:
        runs-on: ubuntu-latest

        services:
            mysql:
                image: mysql:8.0
                env:
                    MYSQL_ROOT_PASSWORD: root_password
                    MYSQL_DATABASE: visa_fit_test
                    MYSQL_USER: visa_fit
                    MYSQL_PASSWORD: visa_fit_pwd
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Setup pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install --no-frozen-lockfile

            - name: Run linting
              run: pnpm lint

            - name: Run tests
              run: pnpm test
              env:
                  NODE_ENV: test
                  DB_HOST: localhost
                  DB_PORT: 3306
                  DB_USER: visa_fit
                  DB_PASSWORD: visa_fit_pwd
                  DB_NAME: visa_fit_test
                  JWT_SECRET: test_jwt_secret

            - name: Build backend
              run: pnpm backend:build

            - name: Build frontend
              run: pnpm --filter frontend build
