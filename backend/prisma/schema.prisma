// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  firstName String   @default("") @map("first_name")
  lastName  String   @default("") @map("last_name")
  passHash  String   @map("pass_hash")
  createdAt DateTime @default(now()) @map("created_at")
  
  // Relations
  submissions       Submission[]
  resumes          Resume[]
  applicationStatus ApplicationStatus?
  
  @@map("users")
}

model Submission {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  answers   String   // JSON string for SQLite compatibility
  verdict   String?  // "eligible" | "not_eligible" | "pending"
  createdAt DateTime @default(now()) @map("created_at")
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("submissions")
}

model Resume {
  id         Int      @id @default(autoincrement())
  userId     Int      @map("user_id")
  fileName   String   @map("file_name")
  mimeType   String   @map("mime_type")
  data       Bytes    // LONGBLOB for file storage
  uploadedAt DateTime @default(now()) @map("uploaded_at")
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("resumes")
}

model EB1AAssessment {
  id              Int      @id @default(autoincrement())
  name            String
  countryOfOrigin String   @map("country_of_origin")
  achievements    String   // JSON string for SQLite compatibility
  isEligible      Boolean  @map("is_eligible")
  criteriaMet     String   // JSON array string
  reasoning       String
  confidence      Int
  createdAt       DateTime @default(now()) @map("created_at")
  
  @@map("eb1a_assessments")
}

model ApplicationStatus {
  id                    Int      @id @default(autoincrement())
  userId                Int      @unique @map("user_id")
  eligibilityCompleted  Boolean  @default(false) @map("eligibility_completed")
  eligibilityCompletedAt DateTime? @map("eligibility_completed_at")
  packagePurchased      Boolean  @default(false) @map("package_purchased")
  packagePurchasedAt    DateTime? @map("package_purchased_at")
  documentsUploaded     Boolean  @default(false) @map("documents_uploaded")
  documentsUploadedAt   DateTime? @map("documents_uploaded_at")
  applicationReviewed   Boolean  @default(false) @map("application_reviewed")
  applicationReviewedAt DateTime? @map("application_reviewed_at")
  uscisSubmitted        Boolean  @default(false) @map("uscis_submitted")
  uscisSubmittedAt      DateTime? @map("uscis_submitted_at")
  currentStep           String   @default("eligibility") @map("current_step") // "eligibility" | "payment" | "documents" | "review" | "uscis" | "completed"
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @updatedAt @map("updated_at")
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("application_status")
} 